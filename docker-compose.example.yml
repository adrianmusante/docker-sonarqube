services:
  sonarqube-db:
    image: postgres:17-alpine
    container_name: sonarqube-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonardb
    volumes:
      - sonarqube_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      start_period: 1m
      start_interval: 5s
      interval: 1m
      timeout: 10s
      retries: 3

  sonarqube:
    image: adrianmusante/sonarqube # Recommended to specify a tag with a major or minor version (e.g., 10 or 10.6)
    container_name: sonarqube
    depends_on:
      sonarqube-db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - SONARQUBE_DATABASE_HOST=sonarqube-db
      - SONARQUBE_DATABASE_PORT_NUMBER=5432
      - SONARQUBE_DATABASE_NAME=sonardb
      - SONARQUBE_DATABASE_USER=sonar
      - SONARQUBE_DATABASE_PASSWORD=sonar
      - SONARQUBE_USERNAME=${SONARQUBE_USERNAME:-admin}
      - SONARQUBE_PASSWORD=${SONARQUBE_PASSWORD:-Admin.123456}
    ports:
      - "9000:9000"
    volumes:
      - sonarqube:/bitnami/sonarqube
    healthcheck:
      # if SONARQUBE_SKIP_MIGRATION is set to true, it is recommended to use:
      #   test: health-check -s DB_MIGRATION_NEEDED -s DB_MIGRATION_RUNNING
      test: health-check # in normal use
      start_period: 3m
      start_interval: 10s
      interval: 1m
      timeout: 10s
      retries: 3

networks:
  default:
    name: sonarqube_network
    driver: bridge

volumes:
  sonarqube_db:
    driver: local
  sonarqube:
    driver: local
